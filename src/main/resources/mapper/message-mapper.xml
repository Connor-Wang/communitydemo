<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wcaaotr.community.dao.MessageMapper">
    <insert id="insertMessage" parameterType="com.wcaaotr.community.entity.Message">
        insert into message(from_id, to_id, conversation_id, content, status, create_time)
        values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>
    <update id="updateMessageStatus">
        update message
        set status=#{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="selectConversationsByUserId" resultType="com.wcaaotr.community.entity.Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from message
        where id in (
            select max(id) from message
                where status != 2 and from_id != 1 and (from_id=#{userId} or to_id=#{userId})
                group by conversation_id
            )
        order by id desc
    </select>
    <select id="selectLetterCountByConversationId" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
          and from_id != 1
          and conversation_id=#{conversationId}
    </select>
    <select id="selectUnreadLetterCountByConversationId" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
          and from_id != 1
          and to_id = #{userId}
          <if test="conversationId != null">
            and conversation_id=#{conversationId}
          </if>
    </select>
    <select id="selectLettersByConversationId" resultType="com.wcaaotr.community.entity.Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from message
        where status!= 2
          and from_id != 1
          and conversation_id=#{conversationId}
        order by id desc
    </select>
    <select id="selectLatestNoticeByTopic" resultType="com.wcaaotr.community.entity.Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from message
        where id in (
            select max(id) from message
            where status != 2
              and from_id=1
              and to_id=#{userId}
              and conversation_id=#{topic}
            )
    </select>
    <select id="selectNoticeCountByTopic" resultType="java.lang.Integer">
        select count(id) from message
        where status != 2
          and from_id=1
          and to_id=#{userId}
          and conversation_id=#{topic}
    </select>
    <select id="selectUnreadNoticeCountByTopic" resultType="java.lang.Integer">
        select count(id) from message
        where status = 0
          and from_id=1
          and to_id=#{userId}
          and conversation_id=#{topic}
    </select>
    <select id="selectUnreadNoticeCount" resultType="java.lang.Integer">
        select count(id) from message
        where status = 0
          and from_id=1
          and to_id=#{userId}
    </select>
    <select id="selectNoticeByTopic" resultType="com.wcaaotr.community.entity.Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from message
        where status != 2
          and from_id=1
          and to_id=#{userId}
          and conversation_id=#{topic}
        order by id desc
    </select>
</mapper>